-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Blog.InputObject exposing (..)

import Blog.Interface
import Blog.Object
import Blog.Scalar
import Blog.ScalarCodecs
import Blog.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildPostInput :
    PostInputRequiredFields
    -> PostInput
buildPostInput required =
    { title = required.title, body = required.body, author = required.author }


type alias PostInputRequiredFields =
    { title : String
    , body : String
    , author : String
    }


{-| Type for the PostInput input object.
-}
type alias PostInput =
    { title : String
    , body : String
    , author : String
    }


{-| Encode a PostInput into a value that can be used as an argument.
-}
encodePostInput : PostInput -> Value
encodePostInput input =
    Encode.maybeObject
        [ ( "title", Encode.string input.title |> Just ), ( "body", Encode.string input.body |> Just ), ( "author", Encode.string input.author |> Just ) ]
